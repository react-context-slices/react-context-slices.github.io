1:HL["/_next/static/css/369a28591c129e58.css",{"as":"style"}]
0:["jMKqPZ_DaBiDzHycMi5f8",[[["",{"children":["(layout)",{"children":["get-initial-state-from-storage",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/369a28591c129e58.css","precedence":"next"}]],["$L3",null]]]]]
4:HL["/_next/static/css/96e77edbf29b84fb.css",{"as":"style"}]
5:HL["/_next/static/css/b7338412545f38fd.css",{"as":"style"}]
6:I{"id":68576,"chunks":["518:static/chunks/518-f6013124d4871cfe.js","185:static/chunks/app/layout-e5bf99a4fde67f96.js"],"name":"","async":false}
7:I{"id":77002,"chunks":["518:static/chunks/518-f6013124d4871cfe.js","185:static/chunks/app/layout-e5bf99a4fde67f96.js"],"name":"","async":false}
8:I{"id":13211,"chunks":["272:static/chunks/webpack-dd0ca7dc5f34bb44.js","253:static/chunks/bce60fc1-4a624d0fba394326.js","769:static/chunks/769-ff328b7feac32451.js"],"name":"default","async":false}
9:I{"id":5767,"chunks":["272:static/chunks/webpack-dd0ca7dc5f34bb44.js","253:static/chunks/bce60fc1-4a624d0fba394326.js","769:static/chunks/769-ff328b7feac32451.js"],"name":"default","async":false}
a:I{"id":39997,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-f6013124d4871cfe.js","88:static/chunks/88-f57c8cf28ef40f40.js","540:static/chunks/app/(layout)/layout-d71e5c0350e6d691.js"],"name":"","async":false}
b:I{"id":54471,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-f6013124d4871cfe.js","88:static/chunks/88-f57c8cf28ef40f40.js","540:static/chunks/app/(layout)/layout-d71e5c0350e6d691.js"],"name":"","async":false}
c:I{"id":54861,"chunks":["518:static/chunks/518-f6013124d4871cfe.js","24:static/chunks/24-e45a2f9e02a17349.js","780:static/chunks/780-ee5cd7490a5967e9.js","638:static/chunks/app/(layout)/get-initial-state-from-storage/page-1793204b51a30b40.js"],"name":"","async":false}
d:I{"id":87067,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-f6013124d4871cfe.js","24:static/chunks/24-e45a2f9e02a17349.js","780:static/chunks/780-ee5cd7490a5967e9.js","287:static/chunks/app/(layout)/(presentation)/(page)/page-0089f3f6d8e53563.js"],"name":"","async":false}
e:I{"id":53020,"chunks":["518:static/chunks/518-f6013124d4871cfe.js","24:static/chunks/24-e45a2f9e02a17349.js","780:static/chunks/780-ee5cd7490a5967e9.js","714:static/chunks/app/(layout)/how-to-use-it-typescript/page-c2b3cc0ebedc6f2b.js"],"name":"","async":false}
f:I{"id":71043,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-f6013124d4871cfe.js","88:static/chunks/88-f57c8cf28ef40f40.js","540:static/chunks/app/(layout)/layout-d71e5c0350e6d691.js"],"name":"","async":false}
10:I{"id":28463,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-f6013124d4871cfe.js","88:static/chunks/88-f57c8cf28ef40f40.js","540:static/chunks/app/(layout)/layout-d71e5c0350e6d691.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","meta",null,{"name":"google-site-verification","content":"XEy7NkRYOuOexcZuyLjHgnyVm_gfzYwXuH87ZvesxzM"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1, shrink-to-fit=no"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=Roboto"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=Source+Code+Pro"}]]}],["$","body",null,{"children":["$","$L6",null,{"children":["$","$L7",null,{"value":{"size":"2em"},"children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[[["$","$La",null,{"minWidth":850,"children":["$","div",null,{"className":"layout_appContainer__lBmos","children":[["$","$Lb",null,{}],["$","div",null,{"className":"layout_pageContent__3qZXW","children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children","get-initial-state-from-storage","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[["$","$Lc",null,{"children":[["$","$Ld",null,{"children":"To get initial state of a React Context slice from local storage for web or async storage for React Native you do it like this."}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    counter: { initialArg: 0, isGetInitialStateFromStorage: true }, // React Context slice\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"Then you should persist the state of the slice when it changes in your component."}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// app.jsx\nimport { useSlice } from \"./slices\";\nimport { useEffect } from \"react\";\n\nconst App = () => {\n  const [count, setCount] = useSlice(\"counter\");\n\n  // this persist the value to local storage\n  useEffect(() => {\n    localStorage.setItem(\"counter\", JSON.stringify(count));\n  }, [count]);\n\n  return (\n    <>\n      <button onClick={() => setCount((c) => c + 1)}>+</button>\n      {count}\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"For React Native you do:"}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    counter: { initialArg: 0, isGetInitialStateFromStorage: true }, // React Context slice\n    // rest of slices (either Redux or React Context slices)\n  },\n  AsyncStorage, // <-- set AsyncStorage key to AsyncStorage for React Native\n});"}],["$","$Ld",null,{"children":"And then in your component you should do it like this when persisting state value:"}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// app.jsx\nimport React, { useEffect, useRef } from \"react\";\nimport { useSlice } from \"./slices\";\nimport { Button, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst App = () => {\n  const isInitialMountRef = useRef(true);\n  const [count, setCount] = useSlice(\"counter\");\n\n  useEffect(() => {\n    (async () => {\n      !isInitialMountRef.current &&\n        (await AsyncStorage.setItem(\"counter\", JSON.stringify(count)));\n    })();\n  }, [count]);\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []);\n\n  return (\n    <View>\n      <Button title=\"+\" onPress={() => setCount((c) => c + 1)} />\n      <Text>{count}</Text>\n    </View>\n  );\n};\n\nexport default App;"}]]}],null],"segment":"__PAGE__"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b7338412545f38fd.css","precedence":"next"}]]}],"segment":"get-initial-state-from-storage"},"styles":[]}]}]]}]}],["$","$La",null,{"maxWidth":849,"children":["$","div",null,{"className":"layout_appContainer__lBmos layout_mobileAppContainer__76fVW","children":[["$","$Lf",null,{}],["$","div",null,{"className":"layout_mobilePageContent__Jc17u","children":[["$","$L10",null,{}],["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children","get-initial-state-from-storage","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[["$","$Lc",null,{"children":[["$","$Ld",null,{"children":"To get initial state of a React Context slice from local storage for web or async storage for React Native you do it like this."}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    counter: { initialArg: 0, isGetInitialStateFromStorage: true }, // React Context slice\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"Then you should persist the state of the slice when it changes in your component."}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// app.jsx\nimport { useSlice } from \"./slices\";\nimport { useEffect } from \"react\";\n\nconst App = () => {\n  const [count, setCount] = useSlice(\"counter\");\n\n  // this persist the value to local storage\n  useEffect(() => {\n    localStorage.setItem(\"counter\", JSON.stringify(count));\n  }, [count]);\n\n  return (\n    <>\n      <button onClick={() => setCount((c) => c + 1)}>+</button>\n      {count}\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"For React Native you do:"}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    counter: { initialArg: 0, isGetInitialStateFromStorage: true }, // React Context slice\n    // rest of slices (either Redux or React Context slices)\n  },\n  AsyncStorage, // <-- set AsyncStorage key to AsyncStorage for React Native\n});"}],["$","$Ld",null,{"children":"And then in your component you should do it like this when persisting state value:"}],["$","$Le",null,{"className":"page_codeBlock__eel3A","children":"// app.jsx\nimport React, { useEffect, useRef } from \"react\";\nimport { useSlice } from \"./slices\";\nimport { Button, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst App = () => {\n  const isInitialMountRef = useRef(true);\n  const [count, setCount] = useSlice(\"counter\");\n\n  useEffect(() => {\n    (async () => {\n      !isInitialMountRef.current &&\n        (await AsyncStorage.setItem(\"counter\", JSON.stringify(count)));\n    })();\n  }, [count]);\n\n  useEffect(() => {\n    isInitialMountRef.current = false;\n  }, []);\n\n  return (\n    <View>\n      <Button title=\"+\" onPress={() => setCount((c) => c + 1)} />\n      <Text>{count}</Text>\n    </View>\n  );\n};\n\nexport default App;"}]]}],null],"segment":"__PAGE__"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b7338412545f38fd.css","precedence":"next"}]]}],"segment":"get-initial-state-from-storage"},"styles":[]}]]}]]}]}]],null],"segment":"(layout)"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/96e77edbf29b84fb.css","precedence":"next"}]]}]}]}]}]]}],null]
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"react-context-slices"}],["$","meta","2",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]]
