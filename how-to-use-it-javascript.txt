1:HL["/_next/static/css/369a28591c129e58.css",{"as":"style"}]
0:["DoTCcjqYEhWzV1jJmxkjY",[[["",{"children":["(layout)",{"children":["how-to-use-it-javascript",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/369a28591c129e58.css","precedence":"next"}]],["$L3",null]]]]]
4:HL["/_next/static/css/96e77edbf29b84fb.css",{"as":"style"}]
5:HL["/_next/static/css/978b85552269a9ab.css",{"as":"style"}]
6:I{"id":68576,"chunks":["518:static/chunks/518-a76d3f16b9160eac.js","185:static/chunks/app/layout-baaebcfe35cc36f5.js"],"name":"","async":false}
7:I{"id":77002,"chunks":["518:static/chunks/518-a76d3f16b9160eac.js","185:static/chunks/app/layout-baaebcfe35cc36f5.js"],"name":"","async":false}
8:I{"id":13211,"chunks":["272:static/chunks/webpack-edbb62be5043ebfd.js","253:static/chunks/bce60fc1-6a16359ba0706bd8.js","769:static/chunks/769-6148ae0eb33a06a1.js"],"name":"default","async":false}
9:I{"id":5767,"chunks":["272:static/chunks/webpack-edbb62be5043ebfd.js","253:static/chunks/bce60fc1-6a16359ba0706bd8.js","769:static/chunks/769-6148ae0eb33a06a1.js"],"name":"default","async":false}
a:I{"id":39997,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-a76d3f16b9160eac.js","88:static/chunks/88-548fbfdb138ebe53.js","540:static/chunks/app/(layout)/layout-025a0c59bd89f76c.js"],"name":"","async":false}
b:I{"id":54471,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-a76d3f16b9160eac.js","88:static/chunks/88-548fbfdb138ebe53.js","540:static/chunks/app/(layout)/layout-025a0c59bd89f76c.js"],"name":"","async":false}
c:I{"id":95964,"chunks":["518:static/chunks/518-a76d3f16b9160eac.js","24:static/chunks/24-d7a24ba30ab0b1ae.js","780:static/chunks/780-ddfd853e4a4c7a71.js","634:static/chunks/app/(layout)/how-to-use-it-javascript/page-9dcc4dcefc2dd8c2.js"],"name":"","async":false}
d:I{"id":87067,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-a76d3f16b9160eac.js","24:static/chunks/24-d7a24ba30ab0b1ae.js","780:static/chunks/780-ddfd853e4a4c7a71.js","287:static/chunks/app/(layout)/(presentation)/(page)/page-5e5e9a672691ead2.js"],"name":"","async":false}
e:I{"id":53020,"chunks":["518:static/chunks/518-a76d3f16b9160eac.js","24:static/chunks/24-d7a24ba30ab0b1ae.js","982:static/chunks/app/(layout)/things-you-can-do/page-14d2a9c976df2ab8.js"],"name":"","async":false}
f:I{"id":71043,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-a76d3f16b9160eac.js","88:static/chunks/88-548fbfdb138ebe53.js","540:static/chunks/app/(layout)/layout-025a0c59bd89f76c.js"],"name":"","async":false}
10:I{"id":28463,"chunks":["79:static/chunks/1418ae87-3000290110e18c25.js","296:static/chunks/2e3a737e-571b0c8472a5afbb.js","518:static/chunks/518-a76d3f16b9160eac.js","88:static/chunks/88-548fbfdb138ebe53.js","540:static/chunks/app/(layout)/layout-025a0c59bd89f76c.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","meta",null,{"name":"google-site-verification","content":"XEy7NkRYOuOexcZuyLjHgnyVm_gfzYwXuH87ZvesxzM"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1, shrink-to-fit=no"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=Roboto"}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=Source+Code+Pro"}]]}],["$","body",null,{"children":["$","$L6",null,{"children":["$","$L7",null,{"value":{"size":"2em"},"children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[[["$","$La",null,{"minWidth":850,"children":["$","div",null,{"className":"layout_appContainer__lBmos","children":[["$","$Lb",null,{}],["$","div",null,{"className":"layout_pageContent__3qZXW","children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children","how-to-use-it-javascript","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[["$","$Lc",null,{"children":[["$","$Ld",null,{"children":"You can define a Redux slice. The key point is to put a *`reducers`* key in the object definition of the slice."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    count: {\n      // Redux slice\n      initialState: 0,\n      reducers: {\n        increment: (state) => state + 1,\n      },\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"This is how you would use it in a component with the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [count, reduxDispatch, { increment }] = useSlice(\"count\");\n\n  return (\n    <>\n      <div>\n        <button onClick={() => reduxDispatch(increment())}>+</button>\n        {count}\n      </div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"You can define a React Context slice."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    count: {\n      // React Context slice\n      initialArg: 0,\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"This is how you would use it in a component with the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [count, setCount] = useSlice(\"count\");\n\n  return (\n    <>\n      <div>\n        <button onClick={() => setCount((c) => c + 1)}>+</button>\n        {count}\n      </div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"A React Context slice can also accept a *`reducer`*."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    count: {\n      // React Context slice\n      initialArg: 0,\n      reducer: (state, { type }) => {\n        switch (type) {\n          case \"increment\":\n            return state + 1;\n          default:\n            return state;\n        }\n      },\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"This is how you would use it in a component with the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [count, dispatchCount] = useSlice(\"count\");\n\n  return (\n    <>\n      <div>\n        <button onClick={() => dispatchCount({ type: \"increment\" })}>+</button>\n        {count}\n      </div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"When using Redux slices, we can also pass a **selector** as a second argument to the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    todos: {\n      // Redux slice\n      initialState: [],\n      reducers: {\n        add: (state, { payload }) => {\n          state.push(payload);\n        },\n      },\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [todos, reduxDispatch, { add }] = useSlice(\"todos\");\n  const [firstTodo] = useSlice(\"todos\", (state) => state[0]);\n\n  return (\n    <>\n      <div>\n        <button onClick={() => reduxDispatch(add(\"use react-context-slices\"))}>\n          add\n        </button>\n        {todos.map((t, i) => (\n          <div key={i}>{t}</div>\n        ))}\n      </div>\n      <div>{firstTodo}</div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"Finally, if we want all to work as expected, we must use the *`Provider`* up in the tree:"}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// index.jsx\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"./slices\";\nimport App from \"./app\";\n\nconst container = document.getElementById(\"root\");\n\nif (container !== null) {\n  createRoot(container).render(\n    <StrictMode>\n      <Provider>\n        <App />\n      </Provider>\n    </StrictMode>\n  );\n}"}]]}],null],"segment":"__PAGE__"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/978b85552269a9ab.css","precedence":"next"}]]}],"segment":"how-to-use-it-javascript"},"styles":[]}]}]]}]}],["$","$La",null,{"maxWidth":849,"children":["$","div",null,{"className":"layout_appContainer__lBmos layout_mobileAppContainer__76fVW","children":[["$","$Lf",null,{}],["$","div",null,{"className":"layout_mobilePageContent__Jc17u","children":[["$","$L10",null,{}],["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","(layout)","children","how-to-use-it-javascript","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[["$","$Lc",null,{"children":[["$","$Ld",null,{"children":"You can define a Redux slice. The key point is to put a *`reducers`* key in the object definition of the slice."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    count: {\n      // Redux slice\n      initialState: 0,\n      reducers: {\n        increment: (state) => state + 1,\n      },\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"This is how you would use it in a component with the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [count, reduxDispatch, { increment }] = useSlice(\"count\");\n\n  return (\n    <>\n      <div>\n        <button onClick={() => reduxDispatch(increment())}>+</button>\n        {count}\n      </div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"You can define a React Context slice."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    count: {\n      // React Context slice\n      initialArg: 0,\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"This is how you would use it in a component with the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [count, setCount] = useSlice(\"count\");\n\n  return (\n    <>\n      <div>\n        <button onClick={() => setCount((c) => c + 1)}>+</button>\n        {count}\n      </div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"A React Context slice can also accept a *`reducer`*."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    count: {\n      // React Context slice\n      initialArg: 0,\n      reducer: (state, { type }) => {\n        switch (type) {\n          case \"increment\":\n            return state + 1;\n          default:\n            return state;\n        }\n      },\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Ld",null,{"children":"This is how you would use it in a component with the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [count, dispatchCount] = useSlice(\"count\");\n\n  return (\n    <>\n      <div>\n        <button onClick={() => dispatchCount({ type: \"increment\" })}>+</button>\n        {count}\n      </div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"When using Redux slices, we can also pass a **selector** as a second argument to the *`useSlice`* hook."}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// slices.js\nimport getHookAndProviderFromSlices from \"react-context-slices\";\n\nexport const { useSlice, Provider } = getHookAndProviderFromSlices({\n  slices: {\n    todos: {\n      // Redux slice\n      initialState: [],\n      reducers: {\n        add: (state, { payload }) => {\n          state.push(payload);\n        },\n      },\n    },\n    // rest of slices (either Redux or React Context slices)\n  },\n});"}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// app.jsx\nimport { useSlice } from \"./slices\";\n\nconst App = () => {\n  const [todos, reduxDispatch, { add }] = useSlice(\"todos\");\n  const [firstTodo] = useSlice(\"todos\", (state) => state[0]);\n\n  return (\n    <>\n      <div>\n        <button onClick={() => reduxDispatch(add(\"use react-context-slices\"))}>\n          add\n        </button>\n        {todos.map((t, i) => (\n          <div key={i}>{t}</div>\n        ))}\n      </div>\n      <div>{firstTodo}</div>\n    </>\n  );\n};\n\nexport default App;"}],["$","$Ld",null,{"children":"Finally, if we want all to work as expected, we must use the *`Provider`* up in the tree:"}],["$","$Le",null,{"className":"page_codeBlock___0CRb","children":"// index.jsx\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"./slices\";\nimport App from \"./app\";\n\nconst container = document.getElementById(\"root\");\n\nif (container !== null) {\n  createRoot(container).render(\n    <StrictMode>\n      <Provider>\n        <App />\n      </Provider>\n    </StrictMode>\n  );\n}"}]]}],null],"segment":"__PAGE__"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/978b85552269a9ab.css","precedence":"next"}]]}],"segment":"how-to-use-it-javascript"},"styles":[]}]]}]]}]}]],null],"segment":"(layout)"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/96e77edbf29b84fb.css","precedence":"next"}]]}]}]}]}]]}],null]
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"react-context-slices"}],["$","meta","2",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]]
